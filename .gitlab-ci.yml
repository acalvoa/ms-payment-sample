stages:
  - prepare
  - lint
  - build
  - deploy

base:
  stage: prepare
  image: docker:19.03.13
  before_script:
    - echo "$DOCKER_REGISTRY_PASS" | docker login registry.gitlab.com --username $DOCKER_REGISTRY_USER --password-stdin
  services:
    - docker:dind
  script:
    - docker build -f .docker/Dockerfile.base -t registry.gitlab.com/ecopass/backend/ms-platform:base .
    - docker push registry.gitlab.com/ecopass/backend/ms-platform:base

# test:
#   stage: test
#   image: registry.gitlab.com/ecopass/backend/ms-platform:base
#   script:
#     - yarn add @angular/cli
#     - yarn run lint --fix

build:
  stage: build
  image: docker:19.03.13
  before_script:
    - echo "$DOCKER_REGISTRY_PASS" | docker login registry.gitlab.com --username $DOCKER_REGISTRY_USER --password-stdin
  services:
    - docker:dind
  script:
    - docker build -t registry.gitlab.com/ecopass/backend/ms-platform .
    - docker push registry.gitlab.com/ecopass/backend/ms-platform:latest

deploy:
  stage: deploy
  image: alpine
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no -t ec2-user@ec2-34-235-114-195.compute-1.amazonaws.com "ssh -t ec2-user@manager 'cd ecopass-heimdall && ./deploy/ms-platform/deploy.production.sh && exit'"
